// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var module;

  module = angular.module("fifteenPuzzleDirective", []);

  module.directive("fifteenPuzzle", function(fifteenPuzzle) {
    return {
      restrict: "EA",
      replace: true,
      template: '<table class="fifteen-puzzle" ng-class="{\'puzzle-solved\': puzzle.isSolved()}">' + '<tr ng-repeat="($row, row) in puzzle.grid">' + '<td ng-repeat="($col, tile) in row" ng-click="puzzle.move($row, $col)" ng-style="tile.style" ng-class="{\'puzzle-empty\': tile.empty}" title="{{tile.id}}"></td>' + '</tr>' + '</table>',
      scope: {
        size: "@",
        src: "@",
        api: "="
      },
      link: function(scope, element, attrs) {
        var cols, create, image, loading, rows, tile;
        rows = void 0;
        cols = void 0;
        loading = true;
        image = new Image();
        create = function() {
          scope.puzzle = fifteenPuzzle(rows, cols);
          if (attrs.api) {
            scope.api = scope.puzzle;
          }
          return tile();
        };
        tile = function() {
          var height, width;
          if (loading) {
            return;
          }
          width = image.width / cols;
          height = image.height / rows;
          scope.puzzle.traverse(function(tile, row, col) {
            return tile.style = {
              width: width + "px",
              height: height + "px",
              background: (tile.empty ? "none" : "url('" + scope.src + "') no-repeat -" + (col * width) + "px -" + (row * height) + "px")
            };
          });
          return scope.puzzle.shuffle();
        };
        attrs.$observe("size", function(size) {
          size = size.split("x");
          if (size[0] >= 2 && size[1] >= 2) {
            rows = size[0];
            cols = size[1];
            return create();
          }
        });
        return attrs.$observe("src", function(src) {
          loading = true;
          image.src = src;
          return image.onload = function() {
            loading = false;
            return scope.$apply(function() {
              return tile();
            });
          };
        });
      }
    };
  });

}).call(this);
